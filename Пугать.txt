


# class PiggyBank:
#     def __init__(self, dollars, cents):
#         self.dollars = dollars
#         self.cents = cents

#     def add_money(self, deposit_dollars, deposit_cents):
#         self.dollars += deposit_dollars
#         if self.cents + deposit_cents >= 100:
#             self.dollars += (self.cents + deposit_cents) // 100
#             self.cents += (self.cents + deposit_cents) % 100
#         else:
#             self.cents += deposit_cents
#         return self.dollars, self.cents
# class PiggyBank:
# 	def __init__(self, dollars, cents):
# 		self.dollars = dollars
# 		self.cents = cents
# 	def add_money(self, deposit_dollars, deposit_cents):
# 		self.dollars += deposit_dollars
# 		self.cents += deposit_cents
# 		cents_no = self.cents % 100
# 		dollars_no = self.dollars + self.cents // 100


# class Ship:
#     def __init__(self, name, country):
#         self.name = name
#         self.country = country

#     def sail(self):
#         return str("The {} has sailed for {}!".format(self.name, self.country))

# country = input()
# black_pearl = Ship("Black Pearl", country)
# black_pearl.sail()

# class Painting:
#     museum = 'Louvre'
#     def __init__(self, title, artist, year):
#         self.title = title
#         self.artist = artist
#         self.year = year
# a = input()
# b = input()
# c = input()
# painting = Painting(a,b,c)
# print('"' + painting.title + '" ' + 'by ' + painting.artist + '(' + painting.year + ')' + ' hangs in the ' + 'Painting.museum')


# class Fish:
#     place = "aquarium"
#     n_fish = 0  # number of fish in the aquarium

#     def __init__(self, name, kind):
#         self.name = name
#         self.kind = kind


# greg = Fish("Greg", "guppy")
# Fish.n_fish = 1
# print(Fish.n_fish)


# class Book:
#     def __init__(self, author, title, price, book_id):
#         self.author = author
#         self.title = title
#         self.price = price
#         self.book_id = book_id
        
#         def __str__(self):
#             return "{} by {}. ${}. [{}]".format(self.title, self.author, self.price, self.book_id)
# class Book:
#     def __init__(self, author, title, price, book_id):
#         self.author = author
#         self.title = title
#         self.price = price
#         self.book_id = book_id

#     # define the necessary method here
#     def __str__(self):
#         return '{} by {}. ${}. [{}]'.format(self.title, self.author, self.price, self.book_id)


water = 400 
milk = 540
beans = 120
cups = 9
money = 550
def the_coffee_machine_has():
    print("The coffee machine has:")
    print(str(water) +" of water")
    print(str(milk) +" of milk")
    print(str(beans) +" of coffee beans")
    print(str(cups) +" of disposable cups")
    print(str(money) +" of money")

def cup(cups):
    if cups - 1 < 0:
        print("Sorry, not enough disposable cups!")
def fill():
    global water
    global beans
    global milk
    global cups
    global money
    water = int(input("Write how many ml of water do you want to add:")) + water
    milk = int(input("Write how many ml of milk do you want to add:")) + milk
    beans = int(input("Write how many g of beans do you want to add:")) + beans
    cups = int(input("Write how many disposable cups of coffee do you want to add:")) + cups
    action()
def buy():
    digit = input("What do you want to buy? 1 - espresso, 2 - latte, 3 - cappuccino, back - to main menu: ")
    global water
    global beans
    global milk
    global cups
    global money
    if digit == "1":
        if min([water - 250, beans - 16, cups - 1]) >= 0:
            print("I have enough resources, making you a coffee!")
            water -= 250
            beans -= 16
            money += 4
            cups -= 1
        elif water - 250 < 0:
                print("Sorry, not enough water!")
        elif beans - 16 < 0:
                print("Sorry, not enough coffee beans!")
        else:
            cup(cups)
    elif digit == "2":
        
        if min([water - 350, milk - 75, beans - 20, cups - 1]) >= 0:
            print("I have enough resources, making you a coffee!")
            water -= 350
            milk -= 75
            beans -= 20
            money += 7
            cups -= 1
        elif water - 350 < 0:
                print("Sorry, not enough water!")
        elif milk - 75 < 0:
                print("Sorry, not enough milk!")
        elif beans - 20 < 0:
                print("Sorry, not enough coffee beans!")
        else:
            cup(cups)
    elif digit == "3":
        if min([water - 200, milk - 100, beans - 12, cups - 1]) >= 0:
                print("I have enough resources, making you a coffee!")
                water -= 200
                milk -= 100
                beans -= 12
                money += 6
                cups -= 1
        elif water - 200 < 0:
                print("Sorry, not enough water!")
        elif milk - 100 < 0:
                print("Sorry, not enough milk!")
        elif beans - 12 < 0:
                print("Sorry, not enough coffee beans!")
        else:
            cup(cups)
    elif digit == "back":
            action()
    action()
def remaining():
    the_coffee_machine_has()
    action()
def take():
    global water
    global beans
    global milk
    global cups
    global money
    print("I gave you " + str(money))
    money -= money
    action()
def exit_():
    exit(0)

def action():
    action = input("Write action (buy, fill, take, remaining, exit): ")
    if action == "buy":
        buy()
    if action == "remaining":
        remaining()
    if action == "take":
        take()
    if action == "exit":
        exit_()
    if action == "fill":
        fill()


action()


# database
ingredients = {'water': ['ml', 'ml'],
               'milk': ['ml', 'ml'],
               'coffee beans': ['g', 'grams'],
               'disposable cups': ['', '']}
recipe = {'espresso': {'water': 250, 'coffee beans': 16},
          'latte': {'water': 350, 'milk': 75, 'coffee beans': 20},
          'cappuccino': {'water': 200, 'milk': 100, 'coffee beans': 12}}


class CoffeeMachine:
    def __init__(self):
        self.storage = {'water': 400,
                        'milk': 540,
                        'coffee beans': 120,
                        'disposable cups': 9}
        self.money = 550
        self.price = {'espresso': 4,
                      'latte': 7,
                      'cappuccino': 6}
        self.menu()

    def menu(self):
        print()
        print("Write action (buy, fill, take, remaining, exit):")
        action = input()
        if action == 'buy':
            self.buy_menu()
        elif action == 'fill':
            self.fill()
        elif action == 'take':
            self.take()
        elif action == 'remaining':
            self.remaining()
        elif action == 'exit':
            exit()
        else:
            self.menu()

    def remaining(self):
        print("The coffee machine has:")
        for el in self.storage:
            print(f"{self.storage[el]} of {el}")
        print(f"${self.money} of money")
        self.menu()

    def fill(self):
        print()
        for ing in self.storage:
            print(f"Write how many {ingredients[ing][1]} of {ing} do you want to add:")
            self.storage[ing] += int(input())
        self.menu()
        pass

    def take(self):
        print()
        print(f"I gave you ${self.money}")
        self.money = 0
        self.menu()
        pass

    def buy_menu(self):
        print("What do you want to buy? 1 - espresso, 2 - latte, 3 - cappuccino, back - to main menu:")
        action = input()
        if action == '1':
            self.buy_coffee('espresso')
        elif action == '2':
            self.buy_coffee('latte')
        elif action == '3':
            self.buy_coffee('cappuccino')
        elif action == 'back':
            self.menu()
        else:
            self.buy_menu()

    def buy_coffee(self, drink):
        if self.check_storage(drink):
            print("I have enough resources, making you a coffee!")
            for ingredient in recipe[drink]:
                self.storage[ingredient] -= recipe[drink][ingredient]
            self.storage['disposable cups'] -= 1
            self.money += self.price[drink]
        self.menu()

    def check_storage(self, drink):
        if self.storage['disposable cups'] == 0:
            print(f"Sorry, not enough disposable cups!")
            return False
        else:
            for el in recipe[drink]:
                amount = self.storage[el] // recipe[drink][el]
                if amount == 0:
                    print(f"Sorry, not enough {el}!")
                    return False
                else:
                    return True


number_one = CoffeeMachine()



class CoffeeMachine:
#     water = 400 
#     milk = 540
#     beans = 120
#     cups = 9
#     money = 550
#     def __init__(self):

#         self.money = 550
#         self.action()
#     def the_coffee_machine_has(self):
#         print("The coffee machine has:")
#         print(str(self.water) +" of water")
#         print(str(self.milk) +" of milk")
#         print(str(self.beans) +" of coffee beans")
#         print(str(self.cups) +" of disposable cups")
#         print(str(self.money) +" of money")
#     def cup(self, cups):
#         if cups - 1 < 0:
#             print("Sorry, not enough disposable cups!")
#     def fill(self):
#         self.water = int(input("Write how many ml of water do you want to add:")) + self.water
#         self.milk = int(input("Write how many ml of milk do you want to add:")) +self. milk
#         self.beans = int(input("Write how many g of beans do you want to add:")) + self.beans
#         self.cups = int(input("Write how many disposable cups of coffee do you want to add:")) + self.cups
#         self.action()
#     def buy(self):
#         digit = input("What do you want to buy? 1 - espresso, 2 - latte, 3 - cappuccino, back - to main menu: ")
#         if digit == "1":
#             if min([self.water - 250, self.beans - 16, self.cups - 1]) >= 0:
#                 print("I have enough resources, making you a coffee!")
#                 self.water -= 250
#                 self.beans -= 16
#                 self.money += 4
#                 self.cups -= 1
#             elif self.water - 250 < 0:
#                     print("Sorry, not enough water!")
#             elif self.beans - 16 < 0:
#                     print("Sorry, not enough coffee beans!")
#             else:
#                 self.cup(cups)
#         elif digit == "2":
#             if min([self.water - 350, self.milk - 75, self.beans - 20, self.cups - 1]) >= 0:
#                 print("I have enough resources, making you a coffee!")
#                 self.water -= 350
#                 self.milk -= 75
#                 self.beans -= 20
#                 self.money += 7
#                 self.cups -= 1
#             elif self.water - 350 < 0:
#                     print("Sorry, not enough water!")
#             elif self. milk - 75 < 0:
#                     print("Sorry, not enough milk!")
#             elif self.beans - 20 < 0:
#                     print("Sorry, not enough coffee beans!")
#             else:
#                 self.cup(cups)
#         elif digit == "3":
#             if min([self.water - 200, self.milk - 100, self.beans - 12, self.cups - 1]) >= 0:
#                     print("I have enough resources, making you a coffee!")
#                     self.water -= 200
#                     self.milk -= 100
#                     self.beans -= 12
#                     self.money += 6
#                     self.cups -= 1
#             elif self.water - 200 < 0:
#                     print("Sorry, not enough water!")
#             elif self.milk - 100 < 0:
#                     print("Sorry, not enough milk!")
#             elif self.beans - 12 < 0:
#                     print("Sorry, not enough coffee beans!")
#             else:
#                 self.cup(cups)
#         elif digit == "back":
#                 self.action()
#         self.action()
#     def remaining(self):
#         self.the_coffee_machine_has()
#         self.action()
#     def take(self):
#         print("I gave you " + str(self.money))
#         self.money -= self.money
#         self.action()
#     def exit_(self):
#         exit(0)
#     def action(self):
#         action = input("Write action (buy, fill, take, remaining, exit): ")
#         if action == "buy":
#             self.buy()
#         if action == "remaining":
#             self.remaining()
#         if action == "take":
#             self.take()
#         if action == "exit":
#             self.exit_()
#         if action == "fill":
#             self.fill()
# coffee_start = CoffeeMachine()
        